---
import { plot } from "./plot.ts";

const { args, id, class: className } = Astro.props;
const { JSDOM } = await import("jsdom");
const jsdom = new JSDOM("");
global.window = jsdom.window as any;
global.document = jsdom.window.document;
global.Event = jsdom.window.Event;
global.Node = jsdom.window.Node;
global.NodeList = jsdom.window.NodeList;
global.HTMLCollection = jsdom.window.HTMLCollection;

const chart = plot(args);
---

<plot-chart
	data-args={JSON.stringify(args)}
	class:list={["full-width", className]}
	{...id !== undefined && { id }}
	set:html={chart.outerHTML}
/>

<script>
	import { plot } from "./plot.ts";
	class PlotChart extends HTMLElement {
		args: any;
		plotFun: any;
		constructor() {
			super();
			this.args = JSON.parse(this.dataset.args!);
			this.addEventListener("plot", (event) => {
				if (event instanceof CustomEvent) {
					this.args = { ...this.args, ...event.detail };
					this.plot();
				}
			});
		}

		plot = () => {
			const plt = plot(this.args);
			this.innerHTML = "";
			this.append(plt);
		};
	}

	customElements.define("plot-chart", PlotChart);
</script>

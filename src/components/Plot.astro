---
const { plot: plotFile, args, id, class: className } = Astro.props;

const plot = await import(/* @vite-ignore */ plotFile);
console.log(plotFile);
const { JSDOM } = await import("jsdom");
const jsdom = new JSDOM("");
global.window = jsdom.window as any;
global.document = jsdom.window.document;
global.Event = jsdom.window.Event;
global.Node = jsdom.window.Node;
global.NodeList = jsdom.window.NodeList;
global.HTMLCollection = jsdom.window.HTMLCollection;

const chart = plot.plot(args);
---

<plot-chart
	data-args={JSON.stringify(args)}
	data-plot={plotFile}
	class:list={["full-width", className]}
	{...id !== undefined && { id }}
	set:html={chart.outerHTML}
/>

<script>
	class PlotChart extends HTMLElement {
		plotFile: string;
		args: any;
		plotFun: any;
		constructor() {
			super();
			this.plotFile = this.dataset.plot!;
			this.args = JSON.parse(this.dataset.args!);
			this.init();
			this.addEventListener("plot", (event) => {
				if (event instanceof CustomEvent) {
					this.args = { ...this.args, ...event.detail };
					this.plot();
				}
			});
		}
		init = async () => {
			const plot = await import(/* @vite-ignore */ this.plotFile);
			this.plotFun = plot.plot;
		};
		plot = () => {
			const plt = this.plotFun(this.args);
			this.innerHTML = "";
			this.append(plt);
		};
	}

	customElements.define("plot-chart", PlotChart);
</script>
